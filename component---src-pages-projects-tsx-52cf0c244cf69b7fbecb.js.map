{"version":3,"file":"component---src-pages-projects-tsx-52cf0c244cf69b7fbecb.js","mappings":"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","sources":["webpack://portfolio/./node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js","webpack://portfolio/./src/modules/components/Project/utils/context.ts","webpack://portfolio/./src/modules/components/Project/Project.view.tsx","webpack://portfolio/./src/modules/components/Project/Project.container.tsx","webpack://portfolio/./src/pages/projects.tsx"],"sourcesContent":["import { forwardRef, chakra } from '@chakra-ui/system';\nimport { omit, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * React hook that loads an image in the browser,\n * and let's us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\n\n\nfunction useImage(props) {\n  var loading = props.loading,\n      src = props.src,\n      srcSet = props.srcSet,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      crossOrigin = props.crossOrigin,\n      sizes = props.sizes,\n      ignoreFallback = props.ignoreFallback;\n\n  var _useState = useState(\"pending\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n\n  useSafeLayoutEffect(function () {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined;\n\n    if (status === \"loading\") {\n      load();\n    }\n\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n\n  return ignoreFallback ? \"loaded\" : status;\n}\n\nvar _excluded = [\"htmlWidth\", \"htmlHeight\", \"alt\"],\n    _excluded2 = [\"fallbackSrc\", \"fallback\", \"src\", \"srcSet\", \"align\", \"fit\", \"loading\", \"ignoreFallback\", \"crossOrigin\"];\nvar NativeImage = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var htmlWidth = props.htmlWidth,\n      htmlHeight = props.htmlHeight,\n      alt = props.alt,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref,\n    alt: alt\n  }, rest));\n});\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\n\nvar Image$1 = /*#__PURE__*/forwardRef(function (props, ref) {\n  var fallbackSrc = props.fallbackSrc,\n      fallback = props.fallback,\n      src = props.src,\n      srcSet = props.srcSet,\n      align = props.align,\n      fit = props.fit,\n      loading = props.loading,\n      ignoreFallback = props.ignoreFallback,\n      crossOrigin = props.crossOrigin,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n\n\n  var shouldIgnore = loading != null || ignoreFallback || fallbackSrc === undefined && fallback === undefined; // if the user doesn't provide any kind of fallback we should ignore it\n\n  var status = useImage(_extends({}, props, {\n    ignoreFallback: shouldIgnore\n  }));\n\n  var shared = _extends({\n    ref: ref,\n    objectFit: fit,\n    objectPosition: align\n  }, shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"]));\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback;\n    return /*#__PURE__*/React.createElement(chakra.img, _extends({\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc\n    }, shared));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    as: NativeImage,\n    src: src,\n    srcSet: srcSet,\n    crossOrigin: crossOrigin,\n    loading: loading,\n    className: \"chakra-image\"\n  }, shared));\n});\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\n\nvar Img = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    ref: ref,\n    as: NativeImage,\n    className: \"chakra-image\"\n  }, props));\n});\n\nif (__DEV__) {\n  Image$1.displayName = \"Image\";\n}\n\nexport { Image$1 as Image, Img, useImage };","import React from \"react\";\n\nexport const ProjectContext = React.createContext(null)\n\nexport const useProjectContext = () =>{\n    const context = React.useContext(ProjectContext)\n    if(!context)\n        throw new Error(\"useProjectContext cannot be used outside it's provider\")\n    return context\n}","import { Box, Flex, FlexProps, Image, Spacer, Text } from \"@chakra-ui/react\";\nimport { motion } from \"framer-motion\";\nimport React from \"react\";\nimport IProject from \"../../Types/IProject\";\nimport { useProjectContext } from \"./utils/context\";\n\nexport default function ProjectView() {\n  const { data }: { data: IProject } = useProjectContext();\n  const MotionFlex = motion<FlexProps>(Flex);\n  return (\n    <>\n      <Flex\n        w=\"100%\"\n        direction={\"column\"}\n        justifyContent=\"start\"\n        alignItems={\"center\"}\n        mt=\"40px\"\n        mb=\"20px\"\n      >\n        <Text fontSize={\"4.25rem\"} margin={\"2.5rem 0\"} fontWeight=\"800\">\n          Projects\n        </Text>\n        <Box\n          gridGap=\"2.5em\"\n          display={\"grid\"}\n          gridTemplateColumns={{\n            base: \"repeat(1, 1fr)\",\n            lg: \"repeat(2, 1fr)\",\n          }}\n          justifyItems=\"center\"\n        >\n          {data.allSanityProjects.nodes.map((project, id) => (\n            <MotionFlex\n              key={id}\n              maxW={\"min(80vw, 25em)\"}\n              boxShadow={\n                \"0.3px 0.5px 0.7px hsl(0 0% 63% / 0.34), 0.4px 0.8px 1px -1.2px hsl(0 0% 63% / 0.34), 1px 2px 2.5px -2.5px hsl(0 0% 63% / 0.34)\"\n              }\n              whileHover={{\n                boxShadow:\n                  \"0.3px 0.5px 0.7px hsl(0 0% 63% / 0.36), 0.8px 1.6px 2px -0.8px hsl(0 0% 63% / 0.36), 2.1px 4.1px 5.2px -1.7px hsl(0 0% 63% / 0.36), 5px 10px 12.6px -2.5px hsl(0 0% 63% / 0.36)\",\n                transition: { duration: 1, type: \"spring\" },\n                scale: 1.1,\n              }}\n              borderRadius=\"1rem\"\n              direction={\"column\"}\n              overflow=\"hidden\"\n              bgColor={\"white\"}\n            >\n              <Flex\n                w={'400px'}\n                h='250px'\n              >\n                <Flex\n                  maxW=\"400px\"\n                  maxH=\"250px\"\n                  justifyContent={\"center\"}\n                  alignItems=\"center\"\n                >\n                  <Image\n                    src={project.thumbnail}\n                    w=\"100%\"\n                    h=\"100%\"\n                    objectFit={\"contain\"}\n                  />\n                </Flex>\n              </Flex>\n              <Flex\n                p=\"1.5em\"\n                direction={\"column\"}\n                justifyContent=\"space-between\"\n                lineHeight={1}\n              >\n                <Text fontWeight={\"bold\"} fontSize=\"20px\">\n                  {project.name}\n                </Text>\n                <Text lineHeight={1.7} my=\"16px\">\n                  {project.description}\n                </Text>\n              </Flex>\n              <Spacer/>\n              <Flex px=\"1.5em\" pb=\"1.5em\" columnGap={\"20px\"}>\n                <Flex\n                  p=\"0.5rem 0.75rem 0.5rem 1rem\"\n                  alignItems={\"center\"}\n                  fontWeight=\"bold\"\n                  color={\"white\"}\n                  bgColor=\"black\"\n                  borderRadius={\"9999px\"}\n                  cursor={\"pointer\"}\n                  minW=\"130px\"\n                  onClick={() => {\n                    window.open(project.live, \"_blank\");\n                  }}\n                >\n                  Live Demo\n                </Flex>\n\n                <Flex\n                  p=\"0.5rem 0.75rem 0.5rem 1rem\"\n                  alignItems={\"center\"}\n                  fontWeight=\"bold\"\n                  color={\"white\"}\n                  bgColor=\"black\"\n                  borderRadius={\"9999px\"}\n                  cursor={\"pointer\"}\n                  minW=\"100px\"\n                  onClick={() => {\n                    window.open(project.github, \"_blank\");\n                  }}\n                >\n                  GitHub\n                </Flex>\n              </Flex>\n            </MotionFlex>\n          ))}\n        </Box>\n      </Flex>\n    </>\n  );\n}\n","import { graphql, StaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport IProject from \"../../Types/IProject\";\nimport ProjectView from \"./Project.view\";\nimport { ProjectContext } from \"./utils/context\";\n\nexport default function ProjectContainer() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allSanityProjects {\n            nodes {\n              thumbnail\n              description\n              live\n              name\n              github\n            }\n          }\n        }\n      `}\n      render={(data: IProject) => (\n        <ProjectContext.Provider\n          //@ts-ignore\n          value={{ data }}\n        >\n          <ProjectView />\n        </ProjectContext.Provider>\n      )}\n    />\n  );\n}\n","import { Flex } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport About from \"../modules/components/About\";\nimport AppLayout from \"../modules/components/AppLayout/AppLayout\";\nimport { Project } from \"../modules/components/Project\";\n\nexport default function IndexPage() {\n  return (\n    <AppLayout head=\"Projects\">\n      <Project/>\n    </AppLayout>\n  );\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","_excluded2","NativeImage","props","ref","htmlWidth","htmlHeight","alt","rest","width","height","Image$1","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","shouldIgnore","undefined","status","onLoad","onError","sizes","_useState","useState","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useImage","shared","objectFit","objectPosition","as","className","displayName","ProjectContext","React","ProjectView","data","context","Error","useProjectContext","MotionFlex","motion","Flex","w","direction","justifyContent","alignItems","mt","mb","fontSize","margin","fontWeight","gridGap","display","gridTemplateColumns","base","lg","justifyItems","allSanityProjects","nodes","map","project","id","maxW","boxShadow","whileHover","transition","duration","type","scale","borderRadius","overflow","bgColor","h","maxH","thumbnail","p","lineHeight","name","my","description","px","pb","columnGap","color","cursor","minW","onClick","window","open","live","github","ProjectContainer","StaticQuery","query","render","Provider","value","IndexPage","head"],"sourceRoot":""}